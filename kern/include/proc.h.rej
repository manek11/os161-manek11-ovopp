--- kern/include/proc.h	Wed Sep 24 21:07:31 2014 -0400
+++ kern/include/proc.h	Wed Sep 24 21:09:36 2014 -0400
@@ -49,6 +49,7 @@
 	char *p_name;			/* Name of this process */
 	struct spinlock p_lock;		/* Lock for this structure */
 	struct threadarray p_threads;	/* Threads in this process */
+	pid_t p_pid;			/* Process ID */
 
 	/* VM */
 	struct addrspace *p_addrspace;	/* virtual address space */
@@ -67,14 +68,26 @@
 void proc_bootstrap(void);
 
 /* Create a fresh process for use by runprogram(). */
-struct proc *proc_create_runprogram(const char *name);
+int proc_create_runprogram(const char *name, struct proc **ret);
 
 /* Create a fresh process for use by fork() */
 int proc_fork(struct proc **ret);
 
+/* Undo proc_fork if nothing's run in the new process yet. */
+void proc_unfork(struct proc *proc);
+
 /* Destroy a process. */
 void proc_destroy(struct proc *proc);
 
+/*
+ * Cause the current process to exit. The current thread switches
+ * itself into the kernel process.
+ *
+ * The status code should be prepared with one of the _MKWAIT macros
+ * defined in <kern/wait.h>.
+ */
+void proc_exit(int status);
+
 /* Attach a thread to a process. Must not already have a process. */
 int proc_addthread(struct proc *proc, struct thread *t);
 
